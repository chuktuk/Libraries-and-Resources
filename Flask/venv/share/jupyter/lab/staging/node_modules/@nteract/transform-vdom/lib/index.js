"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_clonedeep_1 = __importDefault(require("lodash.clonedeep"));
const React = __importStar(require("react"));
const object_to_react_1 = require("./object-to-react");
exports.objectToReactElement = object_to_react_1.objectToReactElement;
const mediaType = "application/vdom.v1+json";
class VDOM extends React.PureComponent {
    render() {
        try {
            if (this.props.data && this.props.onVDOMEvent) {
                // objectToReactElement is mutatitve so we'll clone our object
                const obj = lodash_clonedeep_1.default(this.props.data);
                return object_to_react_1.objectToReactElement(obj, this.props.onVDOMEvent);
            }
            else {
                throw new Error("No VDOM data provided.");
            }
        }
        catch (err) {
            return (React.createElement(React.Fragment, null,
                React.createElement("pre", { style: {
                        backgroundColor: "ghostwhite",
                        color: "black",
                        fontWeight: 600,
                        display: "block",
                        padding: "10px",
                        marginBottom: "20px"
                    } }, "There was an error rendering VDOM data from the kernel or notebook"),
                React.createElement("code", null, err.toString())));
        }
    }
}
exports.default = VDOM;
VDOM.MIMETYPE = mediaType;
VDOM.defaultProps = {
    mediaType,
    onVDOMEvent: () => {
        console.log("This app doesn't support vdom events ☹️ See @nteract/transform-vdom for more info: https://github.com/nteract/nteract/tree/master/packages/transform-vdom");
    }
};
