!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vega-dataflow"),require("vega-util"),require("d3-hierarchy")):"function"==typeof define&&define.amd?define(["exports","vega-dataflow","vega-util","d3-hierarchy"],t):t(((e=e||self).vega=e.vega||{},e.vega.transforms={}),e.vega,e.vega,e.d3)}(this,(function(e,t,a,r){"use strict";function n(e,t,a){var r={};return e.each((function(e){var n=e.data;a(n)&&(r[t(n)]=e)})),e.lookup=r,e}function i(e){t.Transform.call(this,null,e)}function o(e){return e.values}function s(){var e,t=[];return e={entries:e=>function e(a,r){if(++r>t.length)return a;var n,i=[];for(n in a)i.push({key:n,values:e(a[n],r)});return i}(function e(a,r){if(r>=t.length)return a;for(var n,i,o,s=-1,u=a.length,d=t[r++],l={},f={};++s<u;)(o=l[n=d(i=a[s])+""])?o.push(i):l[n]=[i];for(n in l)f[n]=e(l[n],r);return f}(e,0),0),key:a=>(t.push(a),e)}}function u(e){t.Transform.call(this,null,e)}function d(e,t){return e.parent===t.parent?1:2}i.Definition={type:"Nest",metadata:{treesource:!0,changes:!0},params:[{name:"keys",type:"field",array:!0},{name:"generate",type:"boolean"}]},a.inherits(i,t.Transform).transform=function(e,i){i.source||a.error("Nest transform requires an upstream data source.");var u=e.generate,d=e.modified(),l=i.clone(),f=this.value;return(!f||d||i.changed())&&(f&&f.each(e=>{e.children&&t.isTuple(e.data)&&l.rem.push(e.data)}),this.value=f=r.hierarchy({values:a.array(e.keys).reduce((e,t)=>(e.key(t),e),s()).entries(l.source)},o),u&&f.each(e=>{e.children&&(e=t.ingest(e.data),l.add.push(e),l.source.push(e))}),n(f,t.tupleid,t.tupleid)),l.source.root=f,l},a.inherits(u,t.Transform).transform=function(e,r){r.source&&r.source.root||a.error(this.constructor.name+" transform requires a backing tree data source.");var n=this.layout(e.method),i=this.fields,o=r.source.root,s=e.as||i;e.field?o.sum(e.field):o.count(),e.sort&&o.sort(t.stableCompare(e.sort,e=>e.data)),function(e,t,a){for(var r,n=0,i=t.length;n<i;++n)(r=t[n])in a&&e[r](a[r])}(n,this.params,e),n.separation&&n.separation(!1!==e.separation?d:a.one);try{this.value=n(o)}catch(e){a.error(e)}return o.each((function(e){!function(e,t,a){for(var r=e.data,n=0,i=t.length-1;n<i;++n)r[a[n]]=e[t[n]];r[a[i]]=e.children?e.children.length:0}(e,i,s)})),r.reflow(e.modified()).modifies(s).modifies("leaf")};var l=["x","y","r","depth","children"];function f(e){u.call(this,e)}f.Definition={type:"Pack",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"radius",type:"field",default:null},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:l.length,default:l}]};var p=a.inherits(f,u);p.layout=r.pack,p.params=["radius","size","padding"],p.fields=l;var m=["x0","y0","x1","y1","depth","children"];function c(e){u.call(this,e)}c.Definition={type:"Partition",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:m.length,default:m}]};var y=a.inherits(c,u);function h(e){t.Transform.call(this,null,e)}y.layout=r.partition,y.params=["size","round","padding"],y.fields=m,h.Definition={type:"Stratify",metadata:{treesource:!0},params:[{name:"key",type:"field",required:!0},{name:"parentKey",type:"field",required:!0}]},a.inherits(h,t.Transform).transform=function(e,t){t.source||a.error("Stratify transform requires an upstream data source.");var i=this.value,o=e.modified(),s=t.fork(t.ALL).materialize(t.SOURCE),u=!this.value||o||t.changed(t.ADD_REM)||t.modified(e.key.fields)||t.modified(e.parentKey.fields);return s.source=s.source.slice(),u&&(i=s.source.length?n(r.stratify().id(e.key).parentId(e.parentKey)(s.source),e.key,a.truthy):n(r.stratify()([{}]),e.key,e.key)),s.source.root=this.value=i,s};var g={tidy:r.tree,cluster:r.cluster},v=["x","y","depth","children"];function b(e){u.call(this,e)}b.Definition={type:"Tree",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"tidy",values:["tidy","cluster"]},{name:"size",type:"number",array:!0,length:2},{name:"nodeSize",type:"number",array:!0,length:2},{name:"separation",type:"boolean",default:!0},{name:"as",type:"string",array:!0,length:v.length,default:v}]};var k=a.inherits(b,u);function T(e){t.Transform.call(this,[],e)}k.layout=function(e){var t=e||"tidy";if(a.hasOwnProperty(g,t))return g[t]();a.error("Unrecognized Tree layout method: "+t)},k.params=["size","nodeSize"],k.fields=v,T.Definition={type:"TreeLinks",metadata:{tree:!0,generates:!0,changes:!0},params:[]},a.inherits(T,t.Transform).transform=function(e,r){var n=this.value,i=r.source&&r.source.root,o=r.fork(r.NO_SOURCE),s={};return i||a.error("TreeLinks transform requires a tree data source."),r.changed(r.ADD_REM)?(o.rem=n,r.visit(r.SOURCE,(function(e){s[t.tupleid(e)]=1})),i.each((function(e){var a=e.data,r=e.parent&&e.parent.data;r&&s[t.tupleid(a)]&&s[t.tupleid(r)]&&o.add.push(t.ingest({source:r,target:a}))})),this.value=o.add):r.changed(r.MOD)&&(r.visit(r.MOD,(function(e){s[t.tupleid(e)]=1})),n.forEach((function(e){(s[t.tupleid(e.source)]||s[t.tupleid(e.target)])&&o.mod.push(e)}))),o};var q={binary:r.treemapBinary,dice:r.treemapDice,slice:r.treemapSlice,slicedice:r.treemapSliceDice,squarify:r.treemapSquarify,resquarify:r.treemapResquarify},D=["x0","y0","x1","y1","depth","children"];function z(e){u.call(this,e)}z.Definition={type:"Treemap",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"squarify",values:["squarify","resquarify","binary","dice","slice","slicedice"]},{name:"padding",type:"number",default:0},{name:"paddingInner",type:"number",default:0},{name:"paddingOuter",type:"number",default:0},{name:"paddingTop",type:"number",default:0},{name:"paddingRight",type:"number",default:0},{name:"paddingBottom",type:"number",default:0},{name:"paddingLeft",type:"number",default:0},{name:"ratio",type:"number",default:1.618033988749895},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:D.length,default:D}]};var O=a.inherits(z,u);O.layout=function(){var e=r.treemap();return e.ratio=function(t){var a=e.tile();a.ratio&&e.tile(a.ratio(t))},e.method=function(t){a.hasOwnProperty(q,t)?e.tile(q[t]):a.error("Unrecognized Treemap layout method: "+t)},e},O.params=["method","ratio","size","round","padding","paddingInner","paddingOuter","paddingTop","paddingRight","paddingBottom","paddingLeft"],O.fields=D,e.nest=i,e.pack=f,e.partition=c,e.stratify=h,e.tree=b,e.treelinks=T,e.treemap=z,Object.defineProperty(e,"__esModule",{value:!0})}));